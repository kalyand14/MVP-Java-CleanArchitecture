apply from: '../jacoco.gradle'

apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.android.basics"
        minSdkVersion 21
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDirs += sharedTestDir
            }
            androidTest {
                java.srcDirs += sharedTestDir
            }
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation deps.arch_core.runtime
    implementation deps.app_compat
    implementation deps.material
    implementation deps.cardview
    implementation deps.constraint_layout

    implementation deps.recyclerview
    implementation deps.lifecycle.runtime


    // Annotation processor
    annotationProcessor deps.lifecycle.compiler

    testImplementation deps.junit
    testImplementation deps.mockito.core
    testImplementation deps.robolectric
    testImplementation deps.atsl.core
    testImplementation deps.atsl.runner
    testImplementation deps.atsl.ext_junit
    testImplementation deps.espresso.core
    testImplementation deps.espresso.intents
    testImplementation deps.truth

    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.arch_core.testing
    androidTestImplementation deps.room.testing
    androidTestImplementation deps.espresso.idling_concurrent
    implementation deps.espresso.idling_resource

    // Room components
    implementation deps.room.runtime
    annotationProcessor deps.room.compiler
}
