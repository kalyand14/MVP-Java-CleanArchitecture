apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: [
        'testMockDebugUnitTest', 'testProdDebugUnitTest', "connectedMockDebugAndroidTest"
]) {
//Define which type of report you want to generate
    reports {
        xml.enabled = true
        html.enabled = true
    }
    //define which classes to exclude
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
            '**/*Module.*', // Modules for Dagger.
            '**/*Dagger*.*', // Dagger auto-generated code.
            '**/*MembersInjector*.*', // Dagger auto-generated code.
            '**/*_Provide*Factory*.*',
            '**/*_Factory.*', //Dagger auto-generated code
            '**/*$*$*.*', // Anonymous classes generated by kotlin
            //add libraries
            'android/**/*.*',
            'com/**/*.*',
            'uk/**/*.*',
            'io/**/*.*',
            //remove what we don't test
            'androidTest/**/*.*',
            'test/**/*.*',
            '**/injector/**/*.*',
            '**/model/**/*.*',
            '**/mock/**/*.*',
            '**/event/**/*.*',
            '**/**_ViewBinding**',
            '**/*EventType.*',
            '**/**Mocked'
    ]
    //Define your source and your classes: we want to test the production code
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/mock/debug", excludes: fileFilter)
    //Explain to Jacoco where are you .class file
    classDirectories = files([debugTree])

    //Java Source file directory
    def coverageSourceDirs = [
            "src/main/java",
            "src/mock/java",
            "src/prod/java"
    ]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)


    //As you want to gather all your tests reports, add the ec and exec you want to be took into
    //account when generating the report
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testMockDebugUnitTest.exec",
            "jacoco/testProdDebugUnitTest.exec",
            "outputs/code-coverage/mockDebugAndroidTest/connected/*coverage.ec"
    ])
}